# -*- coding: utf-8 -*-
"""House Prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TyNNq01g9DjvWYjwgA09U_J-T8wdTdGw
"""

import pandas as pd
import numpy as np
from sklearn import linear_model
from sklearn.model_selection import train_test_split

from sklearn.datasets import load_boston
boston = load_boston()
print(boston)

# transform datasets  into a data frame
#data = the data we want or the independent variables also known as values
#feature_name = the column names of the data
#target = the target variable or the price of the houses or dependent variables also known as y value
df_x = pd.DataFrame (boston.data, columns=boston.feature_names) 
df_y = pd.DataFrame(boston.target)

df_x.describe()

reg = linear_model.LinearRegression()

x_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size= 0.33, random_state= 42)

reg.fit(x_train, y_train)

#Print the coefficient/weights for each feature / column of our model
print(reg.coef_)

#print the prediction on our test data
y_pred = reg.predict(x_test)
print(y_pred)



#print the actual value
print(y_test)

#check the model performance / accuracy using mean squared error (mse)
print (np.mean(y_pred-y_test)**2)

#check the model performance / accuracy using mean squared error (mse) and sklearn metrics
from sklearn.metrics import mean_squared_error
print(mean_squared_error(y_test, y_pred))